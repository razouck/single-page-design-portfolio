@import "functions";

// TODO: Animate all svgs.

:root
{
	--light_cream   : hsl(28 100% 97%);
	--medium_brown  : hsl(30 5% 45%);
	--black         : hsl(0 0% 1%);
	--pink          : hsl(0 78% 79%);
	--summer_yellow : hsl(28 89% 67%);
	--light_red     : hsl(7 77% 66%);
	--cyan          : hsl(172 46% 57%);
	--galactic_blue : hsl(252 66% 62%);
	--dark_purple   : hsl(314 45% 23%);

	box-sizing      : border-box;
}

*,
::before,
::after
{
	margin     : 0;
	padding    : 0;
	box-sizing : inherit;
}

body
{
	font-family         : "Plus Jakarta Sans", sans-serif;
	line-height         : ratio(26, 16);
	font-weight         : 500;
	font-optical-sizing : auto;
	min-height          : 100vh;
	color               : var(--medium_brown);
	background-color    : var(--light_cream);
	overflow-x          : hidden;
}

@media (width >= toRem(768))
{
	body
	{
		$size       : 18;
		font-size   : toRem($size);
		line-height : ratio(28, $size);
	}
}

h1,
h2,
h3
{
	color : var(--black);
}

h1
{
	$size       : 36;
	font-size   : toRem($size);
	line-height : ratio(45, $size);
}

h2
{
	font-size : toRem(26);
}

h3
{
	font-size : toRem(24);
}

@media (width >= toRem(768))
{
	h1
	{
		font-size : toRem(44);
	}

	h2,
	h3
	{
		$size       : 32;
		font-size   : toRem($size);
		line-height : ratio(40, $size);
	}
}

@media (width >= toRem(1440))
{
	h1
	{
		$size       : 56;
		font-size   : toRem($size);
		line-height : ratio(70, $size);
	}

	h2
	{
		$size       : 40;
		font-size   : toRem($size);
		line-height : ratio(51, $size);
	}
}

img
{
	font-style      : italic;
	max-inline-size : 100%;
	block-size      : auto;
	vertical-align  : middle;
	user-select     : none;
}


// Header -----------------------------------------------------------------------

header
{
	padding-block-start : #{clampify(16, 32, 375, 768)};

	> div
	{
		margin-block-start : #{clampify(32, 67, 375, 768)};
	}

	p
	{
		max-inline-size    : 24ch;
		margin-block-start : #{clampify(16, 24, 375, 768)};
		margin-inline      : auto;
	}
}

nav
{
	display         : flex;
	justify-content : space-between;
	align-items     : center;
	text-align      : unset;

	> img
	{
		aspect-ratio   : 1;
		max-block-size : #{clampify(48, 64, 375, 768)};
	}
}

@media (width >= toRem(768))
{
	header
	{
		p
		{
			max-inline-size : 58ch;
		}
	}
}


// Skill list -------------------------------------------------------------------

body .wrapper ul,
body .wrapper ul li
{
	display : grid;
}

body .wrapper ul
{
	--gap              : #{toRem(24)};
	--cell-width       : #{toRem(159)};

	grid-auto-rows     : toRem(182);
	gap                : var(--gap);
	list-style         : none;
	margin-block-start : #{clampify(32, 81, 375, 1399)};

	li
	{
		display             : flex;
		flex-direction      : column;
		justify-content     : end;
		font-size           : toRem(24);
		font-weight         : bold;
		padding             : toRem(24);
		color               : var(--light_cream);
		border-radius       : toRem(8);
		background-repeat   : no-repeat;
		background-position : top var(--gap) right var(--gap);

		svg *
		{
			animation-play-state : paused;
		}

		&:hover svg *
		{
			animation-play-state : running;
		}

		svg
		{
			margin-inline-start : auto;
			margin-block-end    : auto;
		}
	}

	li:first-child
	{
		grid-row         : span 2;
		grid-column      : span 2;
		background-color : var(--galactic_blue);
	}

	li:nth-child(2)
	{
		background-color : var(--summer_yellow);
	}

	li:nth-child(3)
	{
		background-color : var(--pink);

	}

	li:nth-child(4)
	{
		background-color : var(--cyan);
	}

	li:nth-child(5)
	{
		background-color : var(--light_red);
	}

	li:nth-child(6)
	{
		background-color : var(--dark_purple);
	}

	li:nth-child(4),
	li:nth-child(5),
	li:nth-child(6)
	{
		grid-column : span 2;
	}
}

.switch
{
	animation-name            : back_and_forth;
	animation-duration        : 2s;
	animation-iteration-count : infinite;
	animation-timing-function : ease-in-out;
	animation-fill-mode       : both;
}

li:hover .switch
{
	animation-play-state : running;
}

@media (width >= toRem(740))
{
	body .wrapper ul
	{
		grid-template-columns : repeat(4, 1fr);
	}
}

@media (width >= toRem(1140))
{
	body .wrapper ul
	{
		grid-template-rows    : toRem(182) toRem(158);
		grid-template-columns : repeat(6, 1fr);
	}
}


// Bio --------------------------------------------------------------------------

body > section:first-of-type
{
	text-align         : center;
	padding-inline     : toRem(16);
	margin-block-start : #{clampify(100, 136, 375, 1440)};

	h2
	{
		margin-block-start : toRem(40);
	}

	a,
	p
	{
		margin-block-start : toRem(24);
	}
}

@media (width >= toRem(768))
{
	body > section:first-of-type
	{
		display               : grid;
		grid-template-columns : 1fr 1fr;
		column-gap            : 9%;
		text-align            : unset;
		position              : relative;
		inset-inline-end      : toRem(40);
		padding-inline        : unset;

		h2
		{
			margin-block-start : unset;
		}

		div
		{
			align-self         : center;
			margin-block-start : unset;
		}
	}
}

@media (width >= toRem(1440))
{
	body > section:first-of-type
	{
		display               : grid;
		grid-auto-rows        : auto;
		grid-template-columns : 5fr 6fr;
		column-gap            : toRem(128);
		position              : unset;
		inset-inline-end      : unset;
		padding-inline        : toRem(165);

		a,
		p
		{
			margin-block-start : toRem(34);
		}
	}
}


// Carousel ---------------------------------------------------------------------

section:nth-of-type(2)
{
	margin-block-start : #{clampify(100, 120, 375, 768)};

	div
	{
		display            : flex;
		gap                : 1rem;
		justify-content    : center;
		margin-block-start : #{clampify(32, 56, 375, 768)};
	}

	button
	{
		display          : grid;
		width            : toRem(64);
		height           : toRem(64);
		color            : var(--light_cream); /* Have an inline-svg */
		background-color : var(--black);
		border           : none;
		border-radius    : 50%;
		cursor           : pointer;
		user-select      : none;
		transition       : background-color 250ms ease;

		&:hover
		{
			background-color : var(--galactic_blue);
		}

		> svg
		{
			place-self     : center;
			pointer-events : none;
		}
	}
}

section:nth-of-type(2) ul
{
	display               : grid;
	grid-template-columns : repeat(5, 1fr);
	gap                   : 1rem;
	margin-block-start    : #{clampify(32, 56, 375, 768)};
	list-style-type       : none;
	overflow-x            : scroll;
	scroll-behavior       : smooth;
	scrollbar-width       : none;

	img
	{
		max-inline-size : unset;
		block-size      : #{clampify(180, 360, 375, 768)};
		border-radius   : toRem(10);
		pointer-events  : none;
		user-select     : none;
	}
}

@media (width >= toRem(1440))
{
	section:nth-of-type(2)
	{
		margin-block-start : toRem(87);
	}
	section:nth-of-type(2) ul img
	{
		block-size : 25vw;
	}
}


// Book a call ------------------------------------------------------------------

div:nth-of-type(3) > section
{
	text-align         : center;
	padding-inline     : toRem(24);
	padding-block      : toRem(48);
	margin-block-start : toRem(100);
	color              : var(--light_cream);
	background-color   : var(--black);
	border-radius      : toRem(10);

	h2
	{
		color : inherit;
	}
}

@media (width >= toRem(768))
{
	div:nth-of-type(3) > section
	{
		padding-inline      : toRem(75);
		padding-block-start : toRem(56);
		padding-block-end   : toRem(64);
		margin-block-start  : #{clampify(100, 120, 375, 768)};
	}
}

@media (width >= toRem(1440))
{
	div:nth-of-type(3) > section
	{
		display               : grid;
		grid-template-columns : 2fr 1fr;
		column-gap            : toRem(182);
		text-align            : left;
		padding-block         : toRem(80);
		padding-inline-start  : toRem(65);
		padding-inline-end    : toRem(95);
		margin-block-start    : toRem(88);
	}

	h2,
	p
	{
		grid-column-start : 1;
	}

	.button
	{
		align-self  : center;
		grid-column : 2 / 3;
		grid-row    : 1 / 3;
	}
}


// Footer -----------------------------------------------------------------------

footer
{
	margin-block-start : #{clampify(40, 57, 375, 768)};
	margin-block-end   : #{clampify(32, 64, 375, 1440)};
}


// Classes ----------------------------------------------------------------------

@property --circle-size
{
	syntax        : "<number>";
	inherits      : false;
	initial-value : 0;
}

.button
{
	--x              : 0;
	--y              : 0;
	--circle-size    : 0.4;
	--circle-opacity : 0.1;
	--xp             : calc(var(--x) * 100%);
	--yp             : calc(var(--y) * 100%);
	--radius         : calc(var(--circle-size) * 10rem);

	display          : inline-block;
	font-size        : toRem(14);
	font-weight      : bold;
	line-height      : ratio(28, 14);
	text-align       : center;
	text-decoration  : none;
	padding-inline   : toRem(28);
	padding-block    : toRem(8);
	color            : var(--light_cream);
	background-color : var(--black);
	border-radius    : toRem(32);
	user-select      : none;
	transition       : background-color 250ms ease,
		--circle-size 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275)
	;

	&:hover
	{
		background-color : var(--galactic_blue);
		background-image : radial-gradient(
			circle var(--radius) at var(--xp) var(--yp),
			rgba(255 255 255 / var(--circle-opacity)) 50%,
			transparent 0
		);
	}

	&:active
	{
		--circle-size : 3;
	}
}

.button.alternate
{
	background-color : var(--light_red);

	&:hover
	{
		background-color : var(--summer_yellow);
	}
}

.flow > * + *
{
	margin-block-start : toRem(24);
}

.text-center
{
	text-align : center;
}

.wrapper
{
	margin-inline : toRem(16);
}

@media (width >= toRem(768))
{
	.button
	{
		font-size      : toRem(16);
		line-height    : ratio(28, 16);
		padding-inline : toRem(45);
		padding-block  : toRem(14);
	}

	.wrapper
	{
		margin-inline : 5.2083%
	}
}

@media (width >= toRem(1440))
{
	.wrapper
	{
		margin-inline : 11.3889%
	}
}


// Animation --------------------------------------------------------------------

@media (prefers-reduced-motion)
{
	*
	{
		animation          : unset !important;
		animation-duration : 0s !important;
	}
}

.slide-up
{
	--duration                : 1s;
	--stagger                 : 0.7s;

	animation-name            : slide-up;
	animation-delay           : calc(var(--duration) * var(--i) - var(--stagger) * var(--i));
	animation-duration        : var(--duration);
	animation-fill-mode       : backwards;
	animation-timing-function : ease;
}

@keyframes back_and_forth
{
	30%,
	70%
	{
		transform : translateX(toRem(-32));
	}
}

@keyframes slide-up
{
	from
	{
		opacity   : 0;
		transform : translateY(toRem(32));
	}
	to
	{
		opacity   : 1;
		transform : none;
	}
}
